{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"GmshTools.jl \u00b6 Install \u00b6 1 ( v1 . 3 ) pkg > add GmshTools Use Existed Library \u00b6 1 2 3 4 5 using Pkg julia > ENV [ \"GMSH_LIB_PATH\" ] = \"/opt/gmsh/lib64\" ; # here is your `libgmsh.so` or `gmsh.dll` julia > Pkg . build ( \"GmshTools\" ) Version \u00b6 The current SDK version is 4.5.1 . Basic Usage \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 using GmshTools gmsh . initialize () gmsh . finalize () @gmsh_do begin # automatically handle initialize and finalize end @gmsh_open msh_file begin gmsh . model . getDimension () # any gmsh API here ... end @gmsh_do begin @addPoint begin x1 , y1 , z1 , mesh_size_1 , point_tag_1 x2 , y2 , z2 , mesh_size_2 , point_tag_2 ... end @addLine begin point_tag_1 , point_tag_2 , line_tag_1 point_tag_2 , point_tag_3 , line_tag_2 ... end @setTransfiniteCurve begin line_tag_1 , num_points_1 , Algorithm_1 , coefficient_1 line_tag_2 , num_points_2 , Algorithm_2 , coefficient_2 ... end @addField FieldTag FieldName begin name_1 , value_1 name_2 , value_2 ... # all added to `FieldTag` field end @addOption begin name_1 , value_1 name_2 , value_2 ... end # more gmsh APIs ... end You may see test files for more concrete examples. More convenient macros will come in the future. To retrieve various mesh information, please refer the Gmsh Julia API .","title":"Home"},{"location":"#gmshtoolsjl","text":"","title":"GmshTools.jl"},{"location":"#install","text":"1 ( v1 . 3 ) pkg > add GmshTools","title":"Install"},{"location":"#use-existed-library","text":"1 2 3 4 5 using Pkg julia > ENV [ \"GMSH_LIB_PATH\" ] = \"/opt/gmsh/lib64\" ; # here is your `libgmsh.so` or `gmsh.dll` julia > Pkg . build ( \"GmshTools\" )","title":"Use Existed Library"},{"location":"#version","text":"The current SDK version is 4.5.1 .","title":"Version"},{"location":"#basic-usage","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 using GmshTools gmsh . initialize () gmsh . finalize () @gmsh_do begin # automatically handle initialize and finalize end @gmsh_open msh_file begin gmsh . model . getDimension () # any gmsh API here ... end @gmsh_do begin @addPoint begin x1 , y1 , z1 , mesh_size_1 , point_tag_1 x2 , y2 , z2 , mesh_size_2 , point_tag_2 ... end @addLine begin point_tag_1 , point_tag_2 , line_tag_1 point_tag_2 , point_tag_3 , line_tag_2 ... end @setTransfiniteCurve begin line_tag_1 , num_points_1 , Algorithm_1 , coefficient_1 line_tag_2 , num_points_2 , Algorithm_2 , coefficient_2 ... end @addField FieldTag FieldName begin name_1 , value_1 name_2 , value_2 ... # all added to `FieldTag` field end @addOption begin name_1 , value_1 name_2 , value_2 ... end # more gmsh APIs ... end You may see test files for more concrete examples. More convenient macros will come in the future. To retrieve various mesh information, please refer the Gmsh Julia API .","title":"Basic Usage"},{"location":"element_types/","text":"Supported Element Type \u00b6 Complete Element Type Codes Code Type Description 1 2-node line 2 3-node triangle 3 4-node quadrangle 4 4-node tetrahedron 5 8-node hexahedron 6 6-node prism 7 5-node pyramid 8 3-node second order line (2 nodes associated with the vertices and 1 with the edge). 9 6-node second order triangle (3 nodes associated with the vertices and 3 with the edges). 10 9-node second order quadrangle (4 nodes associated with the vertices, 4 with the edges and 1 with the face). 11 10-node second order tetrahedron (4 nodes associated with the vertices and 6 with the edges). 12 27-node second order hexahedron (8 nodes associated with the vertices, 12 with the edges, 6 with the faces and 1 with the volume). 13 18-node second order prism (6 nodes associated with the vertices, 9 with the edges and 3 with the quadrangular faces). 14 14-node second order pyramid (5 nodes associated with the vertices, 8 with the edges and 1 with the quadrangular face). 15 1-node point 16 8-node second order quadrangle (4 nodes associated with the vertices and 4 with the edges). 17 20-node second order hexahedron (8 nodes associated with the vertices and 12 with the edges). 18 15-node second order prism (6 nodes associated with the vertices and 9 with the edges). 19 13-node second order pyramid (5 nodes associated with the vertices and 8 with the edges). 20 9-node third order incomplete triangle (3 nodes associated with the vertices, 6 with the edges) 21 10-node third order triangle (3 nodes associated with the vertices, 6 with the edges, 1 with the face) 22 12-node fourth order incomplete triangle (3 nodes associated with the vertices, 9 with the edges) 23 15-node fourth order triangle (3 nodes associated with the vertices, 9 with the edges, 3 with the face) 24 15-node fifth order incomplete triangle (3 nodes associated with the vertices, 12 with the edges) 25 21-node fifth order complete triangle (3 nodes associated with the vertices, 12 with the edges, 6 with the face) 26 4-node third order edge (2 nodes associated with the vertices, 2 internal to the edge) 27 5-node fourth order edge (2 nodes associated with the vertices, 3 internal to the edge) 28 6-node fifth order edge (2 nodes associated with the vertices, 4 internal to the edge) 29 20-node third order tetrahedron (4 nodes associated with the vertices, 12 with the edges, 4 with the faces) 30 35-node fourth order tetrahedron (4 nodes associated with the vertices, 18 with the edges, 12 with the faces, 1 in the volume) 31 56-node fifth order tetrahedron (4 nodes associated with the vertices, 24 with the edges, 24 with the faces, 4 in the volume) 92 64-node third order hexahedron (8 nodes associated with the vertices, 24 with the edges, 24 with the faces, 8 in the volume) 93 125-node fourth order hexahedron (8 nodes associated with the vertices, 36 with the edges, 54 with the faces, 27 in the volume)","title":"Element Types"},{"location":"element_types/#supported-element-type","text":"Complete Element Type Codes Code Type Description 1 2-node line 2 3-node triangle 3 4-node quadrangle 4 4-node tetrahedron 5 8-node hexahedron 6 6-node prism 7 5-node pyramid 8 3-node second order line (2 nodes associated with the vertices and 1 with the edge). 9 6-node second order triangle (3 nodes associated with the vertices and 3 with the edges). 10 9-node second order quadrangle (4 nodes associated with the vertices, 4 with the edges and 1 with the face). 11 10-node second order tetrahedron (4 nodes associated with the vertices and 6 with the edges). 12 27-node second order hexahedron (8 nodes associated with the vertices, 12 with the edges, 6 with the faces and 1 with the volume). 13 18-node second order prism (6 nodes associated with the vertices, 9 with the edges and 3 with the quadrangular faces). 14 14-node second order pyramid (5 nodes associated with the vertices, 8 with the edges and 1 with the quadrangular face). 15 1-node point 16 8-node second order quadrangle (4 nodes associated with the vertices and 4 with the edges). 17 20-node second order hexahedron (8 nodes associated with the vertices and 12 with the edges). 18 15-node second order prism (6 nodes associated with the vertices and 9 with the edges). 19 13-node second order pyramid (5 nodes associated with the vertices and 8 with the edges). 20 9-node third order incomplete triangle (3 nodes associated with the vertices, 6 with the edges) 21 10-node third order triangle (3 nodes associated with the vertices, 6 with the edges, 1 with the face) 22 12-node fourth order incomplete triangle (3 nodes associated with the vertices, 9 with the edges) 23 15-node fourth order triangle (3 nodes associated with the vertices, 9 with the edges, 3 with the face) 24 15-node fifth order incomplete triangle (3 nodes associated with the vertices, 12 with the edges) 25 21-node fifth order complete triangle (3 nodes associated with the vertices, 12 with the edges, 6 with the face) 26 4-node third order edge (2 nodes associated with the vertices, 2 internal to the edge) 27 5-node fourth order edge (2 nodes associated with the vertices, 3 internal to the edge) 28 6-node fifth order edge (2 nodes associated with the vertices, 4 internal to the edge) 29 20-node third order tetrahedron (4 nodes associated with the vertices, 12 with the edges, 4 with the faces) 30 35-node fourth order tetrahedron (4 nodes associated with the vertices, 18 with the edges, 12 with the faces, 1 in the volume) 31 56-node fifth order tetrahedron (4 nodes associated with the vertices, 24 with the edges, 24 with the faces, 4 in the volume) 92 64-node third order hexahedron (8 nodes associated with the vertices, 24 with the edges, 24 with the faces, 8 in the volume) 93 125-node fourth order hexahedron (8 nodes associated with the vertices, 36 with the edges, 54 with the faces, 27 in the volume)","title":"Supported Element Type"}]}